{
  "openapi": "3.0.0",
  "paths": {
    "/api": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/api/users": {
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryOptionsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      },
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "UsersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/auth/signup": {
      "post": {
        "operationId": "AuthController_signUp",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/signin": {
      "post": {
        "operationId": "AuthController_signIn",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/verify-otp": {
      "post": {
        "operationId": "AuthController_verifyOtp",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/profile": {
      "post": {
        "operationId": "ProfileController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfileDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Profile"
        ]
      },
      "get": {
        "operationId": "ProfileController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Profile"
        ]
      }
    },
    "/api/profile/{id}": {
      "get": {
        "operationId": "ProfileController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Profile"
        ]
      },
      "patch": {
        "operationId": "ProfileController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Profile"
        ]
      },
      "delete": {
        "operationId": "ProfileController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Profile"
        ]
      }
    },
    "/api/products": {
      "post": {
        "operationId": "ProductsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "محصول با موفقیت ایجاد شد",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "داده‌های ورودی نامعتبر"
          },
          "403": {
            "description": "عدم دسترسی"
          }
        },
        "summary": "ایجاد یک محصول جدید",
        "tags": [
          "محصولات"
        ]
      },
      "get": {
        "operationId": "ProductsController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "شماره صفحه برای صفحه‌بندی",
            "schema": {
              "minimum": 1,
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "تعداد آیتم‌ها در هر صفحه",
            "schema": {
              "minimum": 1,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "فیلدی که برای مرتب‌سازی استفاده می‌شود",
            "schema": {
              "example": "name",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "جهت مرتب‌سازی (صعودی یا نزولی)",
            "schema": {
              "example": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "populate",
            "required": false,
            "in": "query",
            "description": "لیست فیلدهای مرتبط برای بارگذاری (پاپیولیت) از دیتابیس",
            "schema": {
              "example": [
                "companyId",
                "categories"
              ],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "options",
            "required": false,
            "in": "query",
            "description": "گزینه‌های فیلتر و صفحه‌بندی",
            "schema": {
              "$ref": "#/components/schemas/QueryOptionsDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "لیست محصولات",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        },
        "summary": "دریافت تمام محصولات با گزینه‌های صفحه‌بندی و مرتب‌سازی",
        "tags": [
          "محصولات"
        ]
      }
    },
    "/api/products/{id}": {
      "get": {
        "operationId": "ProductsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "شناسه محصول",
            "schema": {
              "example": "507f1f77bcf86cd799439011",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "جزئیات محصول",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "محصول یافت نشد"
          }
        },
        "summary": "دریافت یک محصول با شناسه",
        "tags": [
          "محصولات"
        ]
      },
      "patch": {
        "operationId": "ProductsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "شناسه محصول",
            "schema": {
              "example": "507f1f77bcf86cd799439011",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "محصول به‌روزرسانی شد",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "403": {
            "description": "عدم دسترسی"
          },
          "404": {
            "description": "محصول یافت نشد"
          }
        },
        "summary": "به‌روزرسانی یک محصول با شناسه",
        "tags": [
          "محصولات"
        ]
      },
      "delete": {
        "operationId": "ProductsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "شناسه محصول",
            "schema": {
              "example": "507f1f77bcf86cd799439011",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "محصول با موفقیت حذف شد",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "عدم دسترسی"
          },
          "404": {
            "description": "محصول یافت نشد"
          }
        },
        "summary": "حذف یک محصول با شناسه",
        "tags": [
          "محصولات"
        ]
      }
    },
    "/api/tickets": {
      "post": {
        "operationId": "TicketingController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTicketDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Ticketing"
        ]
      },
      "get": {
        "operationId": "TicketingController_findAll",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryOptionsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Ticketing"
        ]
      }
    },
    "/api/tickets/{id}": {
      "get": {
        "operationId": "TicketingController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Ticketing"
        ]
      },
      "put": {
        "operationId": "TicketingController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTicketDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Ticketing"
        ]
      },
      "delete": {
        "operationId": "TicketingController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Ticketing"
        ]
      }
    },
    "/api/tickets/{id}/status": {
      "get": {
        "operationId": "TicketingController_findStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Ticketing"
        ]
      },
      "put": {
        "operationId": "TicketingController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Ticketing"
        ]
      }
    },
    "/api/tickets/{id}/escalate": {
      "post": {
        "operationId": "TicketingController_escalateTicket",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Ticketing"
        ]
      }
    },
    "/api/transportings": {
      "post": {
        "operationId": "TransportingsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransportingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Transportings"
        ]
      },
      "get": {
        "operationId": "TransportingsController_findAll",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryOptionsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Transportings"
        ]
      }
    },
    "/api/transportings/{id}": {
      "get": {
        "operationId": "TransportingsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Transportings"
        ]
      },
      "patch": {
        "operationId": "TransportingsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransportingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Transportings"
        ]
      },
      "delete": {
        "operationId": "TransportingsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Transportings"
        ]
      }
    },
    "/api/companies": {
      "post": {
        "operationId": "CompaniesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Companies"
        ]
      },
      "get": {
        "operationId": "CompaniesController_findAll",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryOptionsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Companies"
        ]
      }
    },
    "/api/companies/{id}": {
      "get": {
        "operationId": "CompaniesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Companies"
        ]
      },
      "patch": {
        "operationId": "CompaniesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompanyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Companies"
        ]
      },
      "delete": {
        "operationId": "CompaniesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Companies"
        ]
      }
    },
    "/api/orders": {
      "post": {
        "operationId": "OrdersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "get": {
        "operationId": "OrdersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Orders"
        ]
      }
    },
    "/api/orders/{id}": {
      "get": {
        "operationId": "OrdersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "patch": {
        "operationId": "OrdersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "delete": {
        "operationId": "OrdersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Orders"
        ]
      }
    },
    "/api/goftino/chats": {
      "get": {
        "operationId": "GoftinoChatsController_getChats",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoChats"
        ]
      }
    },
    "/api/goftino/chats/{chat_data}": {
      "get": {
        "operationId": "GoftinoChatsController_getChatData",
        "parameters": [
          {
            "name": "chat_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoChats"
        ]
      }
    },
    "/api/goftino/chats/send-message": {
      "post": {
        "operationId": "GoftinoChatsController_sendMessage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoChats"
        ]
      }
    },
    "/api/goftino/chats/send-message-from-user": {
      "post": {
        "operationId": "GoftinoChatsController_sendMessageFromUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageFromUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoChats"
        ]
      }
    },
    "/api/goftino/chats/send-file": {
      "post": {
        "operationId": "GoftinoChatsController_sendFile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendFileDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoChats"
        ]
      }
    },
    "/api/goftino/chats/operator-typing": {
      "post": {
        "operationId": "GoftinoChatsController_operatorTyping",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorTypingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoChats"
        ]
      }
    },
    "/api/goftino/chats/close-chat": {
      "post": {
        "operationId": "GoftinoChatsController_closeChat",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseChatDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoChats"
        ]
      }
    },
    "/api/goftino/chats/unassign-chat": {
      "post": {
        "operationId": "GoftinoChatsController_unassignChat",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnassignChatDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoChats"
        ]
      }
    },
    "/api/goftino/chats/create-chat": {
      "post": {
        "operationId": "GoftinoChatsController_createChat",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChatDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoChats"
        ]
      }
    },
    "/api/goftino/chats/remove-chat": {
      "post": {
        "operationId": "GoftinoChatsController_removeChat",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveChatDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoChats"
        ]
      }
    },
    "/api/goftino/chats/transfer-chat": {
      "post": {
        "operationId": "GoftinoChatsController_transferChat",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferChatDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoChats"
        ]
      }
    },
    "/api/goftino/chats/{chat_id}/unread-messages": {
      "get": {
        "operationId": "GoftinoChatsController_getUserUnreadMessages",
        "parameters": [
          {
            "name": "chatId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoChats"
        ]
      }
    },
    "/api/goftino/chats/{chat_id}/edit-message": {
      "post": {
        "operationId": "GoftinoChatsController_editMessage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditMessageDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoChats"
        ]
      }
    },
    "/api/goftino/chats/edited-message/{message_id}": {
      "get": {
        "operationId": "GoftinoChatsController_getEditedMessage",
        "parameters": [
          {
            "name": "messageId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoChats"
        ]
      }
    },
    "/api/goftino/chats/send-poll": {
      "post": {
        "operationId": "GoftinoChatsController_sendPoll",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendPollDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoChats"
        ]
      }
    },
    "/api/goftino/operators": {
      "get": {
        "operationId": "GoftinoOperatorsController_getOperators",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoOperators"
        ]
      }
    },
    "/api/goftino/operators/{operatorId}": {
      "get": {
        "operationId": "GoftinoOperatorsController_getOperatorData",
        "parameters": [
          {
            "name": "operatorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoOperators"
        ]
      }
    },
    "/api/goftino/users/{userId}": {
      "get": {
        "operationId": "GoftinoUsersController_getUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoUsers"
        ]
      }
    },
    "/api/goftino/users": {
      "post": {
        "operationId": "GoftinoUsersController_setUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDataDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoUsers"
        ]
      }
    },
    "/api/goftino/users/ban": {
      "post": {
        "operationId": "GoftinoUsersController_banUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BanUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoUsers"
        ]
      }
    },
    "/api/goftino/users/{userId}/visited-pages": {
      "get": {
        "operationId": "GoftinoUsersController_getUserVisitedPages",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "GoftinoUsers"
        ]
      }
    },
    "/api/wallets": {
      "get": {
        "operationId": "WalletsController_getWallet",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Wallets"
        ]
      }
    },
    "/api/transactions": {
      "get": {
        "operationId": "TransactionsController_getTransactions",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Transactions"
        ]
      }
    },
    "/api/payments/initiate": {
      "post": {
        "operationId": "PaymentsController_initiatePayment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitiatePaymentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/payments/callback": {
      "get": {
        "operationId": "PaymentsController_handleCallback",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/carts": {
      "post": {
        "operationId": "CartsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCartDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Carts"
        ]
      },
      "get": {
        "operationId": "CartsController_findAll",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryOptionsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Carts"
        ]
      }
    },
    "/api/carts/{id}": {
      "get": {
        "operationId": "CartsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Carts"
        ]
      },
      "patch": {
        "operationId": "CartsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCartDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Carts"
        ]
      },
      "delete": {
        "operationId": "CartsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Carts"
        ]
      }
    },
    "/api/categories": {
      "post": {
        "operationId": "CategoriesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "دسته‌بندی با موفقیت ایجاد شد",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "داده‌های ورودی نامعتبر"
          }
        },
        "summary": "ایجاد یک دسته‌بندی جدید",
        "tags": [
          "دسته‌بندی‌ها"
        ]
      },
      "get": {
        "operationId": "CategoriesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "لیست دسته‌بندی‌ها",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        },
        "summary": "دریافت تمام دسته‌بندی‌ها",
        "tags": [
          "دسته‌بندی‌ها"
        ]
      }
    },
    "/api/categories/{id}": {
      "get": {
        "operationId": "CategoriesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "شناسه دسته‌بندی",
            "schema": {
              "example": "507f1f77bcf86cd799439012",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "جزئیات دسته‌بندی",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "دسته‌بندی یافت نشد"
          }
        },
        "summary": "دریافت یک دسته‌بندی با شناسه",
        "tags": [
          "دسته‌بندی‌ها"
        ]
      },
      "patch": {
        "operationId": "CategoriesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "شناسه دسته‌بندی",
            "schema": {
              "example": "507f1f77bcf86cd799439012",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "دسته‌بندی به‌روزرسانی شد",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "دسته‌بندی یافت نشد"
          }
        },
        "summary": "به‌روزرسانی یک دسته‌بندی با شناسه",
        "tags": [
          "دسته‌بندی‌ها"
        ]
      },
      "delete": {
        "operationId": "CategoriesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "شناسه دسته‌بندی",
            "schema": {
              "example": "507f1f77bcf86cd799439012",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "دسته‌بندی با موفقیت حذف شد",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "دسته‌بندی یافت نشد"
          }
        },
        "summary": "حذف یک دسته‌بندی با شناسه",
        "tags": [
          "دسته‌بندی‌ها"
        ]
      }
    }
  },
  "info": {
    "title": "practice",
    "description": "API documentation for my practice app",
    "version": "0.0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "QueryOptionsDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "description": "شماره صفحه برای صفحه‌بندی",
            "example": 1,
            "minimum": 1
          },
          "limit": {
            "type": "number",
            "description": "تعداد آیتم‌ها در هر صفحه",
            "example": 10,
            "minimum": 1
          },
          "sortBy": {
            "type": "string",
            "description": "فیلدی که برای مرتب‌سازی استفاده می‌شود",
            "example": "name"
          },
          "sortOrder": {
            "type": "string",
            "description": "جهت مرتب‌سازی (صعودی یا نزولی)",
            "example": "asc",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "populate": {
            "description": "لیست فیلدهای مرتبط برای بارگذاری (پاپیولیت) از دیتابیس",
            "example": [
              "companyId",
              "categories"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "PermissionDto": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "read",
              "update",
              "create",
              "delete"
            ]
          },
          "resource": {
            "type": "string",
            "enum": [
              "auth",
              "products",
              "users",
              "messages",
              "chat"
            ]
          }
        },
        "required": [
          "action",
          "resource"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "meliCode": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDto"
            }
          }
        },
        "required": [
          "phoneNumber",
          "meliCode",
          "permissions"
        ]
      },
      "SignUpDto": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "meliCode": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDto"
            }
          },
          "userAgent": {
            "type": "string"
          },
          "ip": {
            "type": "string"
          },
          "otp": {
            "type": "object"
          }
        },
        "required": [
          "phoneNumber",
          "meliCode",
          "permissions",
          "userAgent",
          "ip",
          "otp"
        ]
      },
      "SignInDto": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          }
        },
        "required": [
          "phoneNumber"
        ]
      },
      "VerifyOtpDto": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "meliCode": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDto"
            }
          },
          "userAgent": {
            "type": "string"
          },
          "ip": {
            "type": "string"
          },
          "otp": {
            "type": "object"
          }
        },
        "required": [
          "phoneNumber",
          "meliCode",
          "permissions",
          "userAgent",
          "ip",
          "otp"
        ]
      },
      "CreateProfileDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateProfileDto": {
        "type": "object",
        "properties": {}
      },
      "StockDto": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "description": "مقدار موجودی محصول در انبار (مثلاً تعداد کیسه یا تن)",
            "example": 500,
            "minimum": 0
          }
        },
        "required": [
          "quantity"
        ]
      },
      "VariantOptionDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "مقدار گزینه تنوع محصول (مثلاً اندازه بسته‌بندی)",
            "example": "50 کیلوگرم"
          },
          "priceModifier": {
            "type": "number",
            "description": "تغییر قیمت برای این گزینه (به ریال)",
            "example": 0
          }
        },
        "required": [
          "value"
        ]
      },
      "VariantDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "نام تنوع محصول (مثلاً بسته‌بندی، گرید)",
            "example": "بسته‌بندی"
          },
          "options": {
            "description": "لیست گزینه‌های تنوع محصول",
            "example": [
              {
                "value": "50 کیلوگرم",
                "priceModifier": 0
              },
              {
                "value": "1 تن",
                "priceModifier": 500000
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariantOptionDto"
            }
          }
        },
        "required": [
          "name",
          "options"
        ]
      },
      "ImageDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "آدرس URL تصویر محصول",
            "example": "https://example.com/cement-bag.jpg"
          }
        },
        "required": [
          "url"
        ]
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "نام محصول (مثلاً نوع مصالح ساختمانی)",
            "example": "سیمان تیپ ۲"
          },
          "slug": {
            "type": "string",
            "description": "شناسه یکتا و مناسب برای SEO محصول",
            "example": "simaan-tip-2"
          },
          "sku": {
            "type": "string",
            "description": "کد واحد نگهداری موجودی (SKU) برای ردیابی انبار",
            "example": "SIM-T2-001"
          },
          "basePrice": {
            "type": "number",
            "description": "قیمت پایه محصول به ازای هر واحد (به ریال)",
            "example": 2000000,
            "minimum": 0
          },
          "companyId": {
            "type": "string",
            "description": "شناسه شرکت (تأمین‌کننده) ارائه‌دهنده محصول",
            "example": "507f1f77bcf86cd799439011"
          },
          "categories": {
            "description": "لیست شناسه‌های دسته‌بندی‌های مرتبط با محصول",
            "example": [
              "507f1f77bcf86cd799439012",
              "507f1f77bcf86cd799439013"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "description": "توضیحات محصول",
            "example": "سیمان تیپ ۲ با مقاومت بالا برای سازه‌های بتنی"
          },
          "stock": {
            "description": "اطلاعات موجودی محصول",
            "example": {
              "quantity": 500
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/StockDto"
              }
            ]
          },
          "variants": {
            "description": "تنوع‌های محصول (مثلاً اندازه بسته‌بندی، گرید)",
            "example": [
              {
                "name": "بسته‌بندی",
                "options": [
                  {
                    "value": "50 کیلوگرم",
                    "priceModifier": 0
                  },
                  {
                    "value": "1 تن",
                    "priceModifier": 500000
                  }
                ]
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariantDto"
            }
          },
          "attributes": {
            "type": "object",
            "description": "ویژگی‌های سفارشی محصول",
            "example": {
              "استحکام": "42.5 مگاپاسکال",
              "زمان گیرش": "3 ساعت"
            },
            "additionalProperties": {
              "type": "string"
            }
          },
          "tags": {
            "description": "برچسب‌ها برای فیلتر و جستجو",
            "example": [
              "سیمان",
              "مصالح ساختمانی"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "images": {
            "description": "تصاویر مرتبط با محصول",
            "example": [
              {
                "url": "https://example.com/cement-bag.jpg"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageDto"
            }
          },
          "subcategory": {
            "type": "string",
            "description": "زیرمجموعه محصول",
            "example": "سیمان پرتلند"
          },
          "comments": {
            "description": "نظرات کاربران درباره محصول",
            "example": [
              "کیفیت عالی!",
              "تحویل سریع"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rating": {
            "type": "number",
            "description": "امتیاز متوسط محصول (از 1 تا 5)",
            "example": 4.5,
            "minimum": 1,
            "maximum": 5
          },
          "status": {
            "type": "string",
            "description": "وضعیت محصول",
            "example": "draft",
            "enum": [
              "active",
              "inactive",
              "draft",
              "archived"
            ]
          }
        },
        "required": [
          "name",
          "slug",
          "sku",
          "basePrice",
          "companyId",
          "stock",
          "attributes"
        ]
      },
      "Product": {
        "type": "object",
        "properties": {}
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "نام محصول (مثلاً نوع مصالح ساختمانی)",
            "example": "سیمان تیپ ۲"
          },
          "slug": {
            "type": "string",
            "description": "شناسه یکتا و مناسب برای SEO محصول",
            "example": "simaan-tip-2"
          },
          "sku": {
            "type": "string",
            "description": "کد واحد نگهداری موجودی (SKU) برای ردیابی انبار",
            "example": "SIM-T2-001"
          },
          "basePrice": {
            "type": "number",
            "description": "قیمت پایه محصول به ازای هر واحد (به ریال)",
            "example": 2000000,
            "minimum": 0
          },
          "companyId": {
            "type": "string",
            "description": "شناسه شرکت (تأمین‌کننده) ارائه‌دهنده محصول",
            "example": "507f1f77bcf86cd799439011"
          },
          "categories": {
            "description": "لیست شناسه‌های دسته‌بندی‌های مرتبط با محصول",
            "example": [
              "507f1f77bcf86cd799439012",
              "507f1f77bcf86cd799439013"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "description": "توضیحات محصول",
            "example": "سیمان تیپ ۲ با مقاومت بالا برای سازه‌های بتنی"
          },
          "stock": {
            "description": "اطلاعات موجودی محصول",
            "example": {
              "quantity": 500
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/StockDto"
              }
            ]
          },
          "variants": {
            "description": "تنوع‌های محصول (مثلاً اندازه بسته‌بندی، گرید)",
            "example": [
              {
                "name": "بسته‌بندی",
                "options": [
                  {
                    "value": "50 کیلوگرم",
                    "priceModifier": 0
                  },
                  {
                    "value": "1 تن",
                    "priceModifier": 500000
                  }
                ]
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariantDto"
            }
          },
          "attributes": {
            "type": "object",
            "description": "ویژگی‌های سفارشی محصول",
            "example": {
              "استحکام": "42.5 مگاپاسکال",
              "زمان گیرش": "3 ساعت"
            },
            "additionalProperties": {
              "type": "string"
            }
          },
          "tags": {
            "description": "برچسب‌ها برای فیلتر و جستجو",
            "example": [
              "سیمان",
              "مصالح ساختمانی"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "images": {
            "description": "تصاویر مرتبط با محصول",
            "example": [
              {
                "url": "https://example.com/cement-bag.jpg"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageDto"
            }
          },
          "subcategory": {
            "type": "string",
            "description": "زیرمجموعه محصول",
            "example": "سیمان پرتلند"
          },
          "comments": {
            "description": "نظرات کاربران درباره محصول",
            "example": [
              "کیفیت عالی!",
              "تحویل سریع"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rating": {
            "type": "number",
            "description": "امتیاز متوسط محصول (از 1 تا 5)",
            "example": 4.5,
            "minimum": 1,
            "maximum": 5
          },
          "status": {
            "type": "string",
            "description": "وضعیت محصول",
            "example": "draft",
            "enum": [
              "active",
              "inactive",
              "draft",
              "archived"
            ]
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreateTicketDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "open",
              "in_progress",
              "resolved",
              "closed",
              "reopened",
              "escalated"
            ],
            "default": "open"
          },
          "priority": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high",
              "urgent"
            ],
            "default": "low"
          },
          "createdBy": {
            "type": "string"
          },
          "assignedTo": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "description",
          "status",
          "priority",
          "createdBy",
          "assignedTo"
        ]
      },
      "UpdateTicketDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "priority"
        ]
      },
      "CreateTransportingDto": {
        "type": "object",
        "properties": {
          "carrier": {
            "type": "string",
            "example": "DHL Express"
          },
          "trackingNumber": {
            "type": "string",
            "example": "123456789"
          },
          "status": {
            "type": "string",
            "example": "Shipped"
          }
        },
        "required": [
          "carrier",
          "trackingNumber",
          "status"
        ]
      },
      "UpdateTransportingDto": {
        "type": "object",
        "properties": {
          "carrier": {
            "type": "string",
            "example": "DHL Express"
          },
          "trackingNumber": {
            "type": "string",
            "example": "123456789"
          },
          "status": {
            "type": "string",
            "example": "Shipped"
          }
        }
      },
      "CreateCompanyDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Tech Innovations Inc."
          },
          "email": {
            "type": "string",
            "example": "info@techinnovations.com"
          },
          "phone": {
            "type": "string",
            "example": "+982123456789"
          },
          "registrationNumber": {
            "type": "string",
            "example": "1234567890"
          },
          "address": {
            "type": "string",
            "example": "Tehran, Iran"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "image": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "name",
          "email",
          "phone",
          "registrationNumber",
          "address",
          "isActive",
          "image"
        ]
      },
      "UpdateCompanyDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Tech Innovations Inc."
          },
          "email": {
            "type": "string",
            "example": "info@techinnovations.com"
          },
          "phone": {
            "type": "string",
            "example": "+982123456789"
          },
          "registrationNumber": {
            "type": "string",
            "example": "1234567890"
          },
          "address": {
            "type": "string",
            "example": "Tehran, Iran"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "image": {
            "type": "string",
            "format": "binary"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "OrderItemDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "example": "product123"
          },
          "quantity": {
            "type": "number",
            "example": 2
          }
        },
        "required": [
          "productId",
          "quantity"
        ]
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "user123"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          },
          "totalPrice": {
            "type": "number",
            "example": 1500
          },
          "status": {
            "type": "string",
            "example": "PENDING",
            "enum": [
              "pending",
              "paid",
              "shipped",
              "delivered",
              "canceled",
              "refunded",
              "completed",
              "failed"
            ]
          },
          "shippingAddress": {
            "type": "string",
            "example": "123 Street, Tehran, Iran"
          },
          "paymentMethod": {
            "type": "string",
            "example": "Credit Card"
          },
          "companyId": {
            "type": "string",
            "example": "company123"
          },
          "transportId": {
            "type": "string",
            "example": "transport456"
          }
        },
        "required": [
          "userId",
          "items",
          "totalPrice",
          "status",
          "shippingAddress",
          "paymentMethod",
          "companyId",
          "transportId"
        ]
      },
      "UpdateOrderDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "user123"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          },
          "totalPrice": {
            "type": "number",
            "example": 1500
          },
          "status": {
            "type": "string",
            "example": "PENDING",
            "enum": [
              "pending",
              "paid",
              "shipped",
              "delivered",
              "canceled",
              "refunded",
              "completed",
              "failed"
            ]
          },
          "shippingAddress": {
            "type": "string",
            "example": "123 Street, Tehran, Iran"
          },
          "paymentMethod": {
            "type": "string",
            "example": "Credit Card"
          },
          "companyId": {
            "type": "string",
            "example": "company123"
          },
          "transportId": {
            "type": "string",
            "example": "transport456"
          }
        }
      },
      "SendMessageDto": {
        "type": "object",
        "properties": {
          "chat_id": {
            "type": "string"
          },
          "operator_id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "reply_id": {
            "type": "string"
          }
        },
        "required": [
          "chat_id",
          "operator_id",
          "message",
          "reply_id"
        ]
      },
      "SendMessageFromUserDto": {
        "type": "object",
        "properties": {
          "chat_id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "reply_id": {
            "type": "string"
          }
        },
        "required": [
          "chat_id",
          "message",
          "reply_id"
        ]
      },
      "SendFileDto": {
        "type": "object",
        "properties": {
          "chat_id": {
            "type": "string"
          },
          "operator_id": {
            "type": "string"
          },
          "file_url": {
            "type": "string"
          },
          "file_size": {
            "type": "string"
          },
          "file_name": {
            "type": "string"
          },
          "file_duration": {
            "type": "string"
          }
        },
        "required": [
          "chat_id",
          "operator_id",
          "file_url",
          "file_size",
          "file_name",
          "file_duration"
        ]
      },
      "OperatorTypingDto": {
        "type": "object",
        "properties": {
          "chat_id": {
            "type": "string"
          },
          "operator_id": {
            "type": "string"
          },
          "typing_status": {
            "type": "boolean"
          }
        },
        "required": [
          "chat_id",
          "operator_id",
          "typing_status"
        ]
      },
      "CloseChatDto": {
        "type": "object",
        "properties": {
          "chat_id": {
            "type": "string"
          },
          "operator_id": {
            "type": "string"
          }
        },
        "required": [
          "chat_id",
          "operator_id"
        ]
      },
      "UnassignChatDto": {
        "type": "object",
        "properties": {
          "chat_id": {
            "type": "string"
          }
        },
        "required": [
          "chat_id"
        ]
      },
      "CreateChatDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "operator_id": {
            "type": "string"
          }
        },
        "required": [
          "user_id",
          "operator_id"
        ]
      },
      "RemoveChatDto": {
        "type": "object",
        "properties": {
          "chat_id": {
            "type": "string"
          }
        },
        "required": [
          "chat_id"
        ]
      },
      "TransferChatDto": {
        "type": "object",
        "properties": {
          "chat_id": {
            "type": "string"
          },
          "from_operator": {
            "type": "string"
          },
          "to_operator": {
            "type": "string"
          }
        },
        "required": [
          "chat_id",
          "from_operator",
          "to_operator"
        ]
      },
      "EditMessageDto": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "string"
          },
          "new_message": {
            "type": "string"
          }
        },
        "required": [
          "message_id",
          "new_message"
        ]
      },
      "SendPollDto": {
        "type": "object",
        "properties": {
          "chat_id": {
            "type": "string"
          },
          "question": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "chat_id",
          "question",
          "options"
        ]
      },
      "UserDataDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "avarar": {
            "type": "string"
          }
        },
        "required": [
          "user_id",
          "name",
          "phone",
          "email",
          "avarar"
        ]
      },
      "BanUserDto": {
        "type": "object",
        "properties": {
          "operator_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "chat_id": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        },
        "required": [
          "operator_id",
          "user_id",
          "chat_id",
          "reason"
        ]
      },
      "InitiatePaymentDto": {
        "type": "object",
        "properties": {}
      },
      "CreateCartDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateCartDto": {
        "type": "object",
        "properties": {}
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the category",
            "example": "سیمان / Cement"
          },
          "slug": {
            "type": "string",
            "description": "SEO-friendly unique slug for the category",
            "example": "cement"
          },
          "description": {
            "type": "string",
            "description": "Description of the category",
            "example": "دسته‌بندی انواع سیمان برای مصارف ساختمانی / Category for various types of cement for construction."
          },
          "parentId": {
            "type": "string",
            "description": "ID of the parent category (if any)",
            "example": "507f1f77bcf86cd799439014"
          },
          "companyId": {
            "type": "string",
            "description": "ID of the company (supplier) owning the category",
            "example": "507f1f77bcf86cd799439011"
          },
          "status": {
            "type": "string",
            "description": "Status of the category",
            "example": "draft",
            "enum": [
              "active",
              "inactive",
              "draft"
            ]
          }
        },
        "required": [
          "name",
          "slug",
          "companyId"
        ]
      },
      "Category": {
        "type": "object",
        "properties": {}
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the category",
            "example": "سیمان / Cement"
          },
          "slug": {
            "type": "string",
            "description": "SEO-friendly unique slug for the category",
            "example": "cement"
          },
          "description": {
            "type": "string",
            "description": "Description of the category",
            "example": "دسته‌بندی انواع سیمان برای مصارف ساختمانی / Category for various types of cement for construction."
          },
          "parentId": {
            "type": "string",
            "description": "ID of the parent category (if any)",
            "example": "507f1f77bcf86cd799439014"
          },
          "companyId": {
            "type": "string",
            "description": "ID of the company (supplier) owning the category",
            "example": "507f1f77bcf86cd799439011"
          },
          "status": {
            "type": "string",
            "description": "Status of the category",
            "example": "draft",
            "enum": [
              "active",
              "inactive",
              "draft"
            ]
          }
        }
      }
    }
  }
}